import telebot

from telebot import types
bot = telebot.TeleBot('6787035545:AAEZtEfdSkcSc0qgSvYHbsEV4YJjv9L2Dcc')

@bot.message_handler(commands=['start'])
def welcome(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("Информационная поддержка")
    item2 = types.KeyboardButton("Управленческие функции")
    markup.row(item1, item2)

    item3 = types.KeyboardButton("Инструкция для заявителей")
    item4 = types.KeyboardButton("Каленьдар событии")
    markup.row(item3, item4)

    # item5 = types.KeyboardButton("Для родителей")

    bot.send_message(message.chat.id,
                     "Hi, {0.first_name}!\nЯ - <b>{1.first_name}</b>, от студентов для упрощения студенческой жизни".format(
                         message.from_user, bot.get_me()),
                     parse_mode='html', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def main_actions(message):
    if message.text == 'Информационная поддержка':
        bot.send_message(message.chat.id, 'Пока неизвестно')
    if message.text == 'Управленческие функции':
        bot.send_message(message.chat.id, 'Пока неизвестно')
    if message.text == 'Инструкция для заявителей':
        admission_info(message)
    if message.text == 'Каленьдар событии':
        activity_calendar(message)
    if message.text == 'Важные даты':
        bot.send_message(message.chat.id, """20 июня - 7 июля
Прием заявлений для сдачи творческих экзаменов

8 - 15 июля 
Проведение творческих экзаменов

15-30 июля 
Прием заявлении для сдачи ЕНТ из лиц, зачисленные в ВУЗы по 
очной форме обучения на платной основе до завершения первого 
академического периода и обучающихся ВУЗов по группе 
образовательных программ, требующие творческой подготовки, и 
желающих перевестись на другие группы образовательных программ

10-20 августа 
Проведение последнего в текущем году единого национального тестирования

20 июня - 24 августа 
Проведение специального педагогического экзамена

01 - 25 августа
Прием документов и зачисление в вуз

13 - 20 июля
Прием заявлений для участия в конкурсе государственных
образовательных грантов

Регистрация для участия в Комплексном тестировании (КТ) для
поступления в магистратуру.

1) с 1 июня по 15 июля календарного года
2) с 1 по 18 ноября календарного года.""")
    if message.text == 'Академ.календарь 1 семестр':
        bot.send_message(message.chat.id, """Начало семестра 12 февраля

Конец семестра 25 мая

Дата выставления средней оценки за учебный период 25 мая

Всего недель 15

Рубежные контроли:
Рубежный контроль 1: 1-6 апреля

Рубежный контроль 2: 20-24 мая

Сессия:
Весенняя сессия: 27 мая - 8 июня

Практика:
Учебная практика: 29 января-10 февраля

Начало периода выставления итоговой оценки
11 февраля

Конец периода выставления итоговой оценки
20 апреля

Летние каникулы
22 июля 29 августа""")
    if message.text == 'Академ.календарь 2 семестр':
        bot.send_message(message.chat.id, """Второй семестр
Начало семестра 12 февраля

Конец семестра 25 мая

Дата выставления средней оценки за учебный период 25 мая

Всего недель: 15

Рубежные контроли:
Рубежный контроль 1: 1-6 апреля
Рубежный контроль 2: 20-24 мая

Сессия:
Весенняя сессия: 27 мая - 8 июня

Практика:
Учебная практика: 29 января-10 февраля

Начало периода выставления итоговой оценки
11 февраля

Конец периода выставления итоговой оценки
20 апреля

Летние каникулы
22 июля 29 августа""")
    if message.text == 'Сессии':
        bot.send_message(message.chat.id, """Сессии 
1 семестр
Рубежный контроль 1: 23-28 октября
Рубежный контроль 2: 11-14 декабря:

сессия уақыты:
1.Зимняя сессия:18-30 декабря
Зимние каникулы: 3-27 января

2 семестр:
Рубежный контроль 1: 1-6 апреля
Рубежный контроль 2: 20-24 мая:

сессия уақыты:
1.Весеняя сессия: 27 мая -8июня
Летние каникулы- 22 июля - 29 августа""")
    if message.text == 'Назад в меню':
        welcome(message)

# ИНСТРУКЦИЯ ДЛЯ ЗАЯВИТЕЛЕЙ
def admission_info(message):
    markup = types.InlineKeyboardMarkup(row_width=2)
    item1 = types.InlineKeyboardButton("На базе среднего образования", callback_data='middle')
    item2 = types.InlineKeyboardButton("Для поступающих на педагогические", callback_data='teacher')
    item3 = types.InlineKeyboardButton(
        "На основании технического и профессионального образования или высшего образования", callback_data='high')
    markup.add(item1)
    markup.add(item2)
    markup.add(item3)
    bot.send_message(message.chat.id, "Выберите", reply_markup=markup)

# КАЛЕНДАРЬ СОБЫТИИ
def activity_calendar(message):
    markup = types.ReplyKeyboardMarkup(row_width=2)
    item1 = types.KeyboardButton("Важные даты")
    item2 = types.KeyboardButton("Академ.календарь 1 семестр")
    item3 = types.KeyboardButton("Академ.календарь 2 семестр")
    item4 = types.KeyboardButton("Сессии")
    exit = types.KeyboardButton("Назад в меню")
    markup.add(item1)
    markup.add(item2)
    markup.add(item3)
    markup.add(item4)
    markup.add(exit)
    bot.send_message(message.chat.id, "Выберите", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'middle':
                bot.send_message(call.message.chat.id, """1. Копия удостоверения личности;
2. Медицинская справка по форме №075 с флюорграфией;
3. Копия формы 063 (прививочная карта);
4. Фотокарточки размером 3 * 4 (6 штук);
 5. Аттестат с приложением об образовании;
6. Сертификат ЕНТ при наличии (электронная версия);
7. Сертификат о государственном гранте (при наличии);
8. Результаты специального или творческого экзамена""")
            elif call.data == 'teacher':
                bot.send_message(call.message.chat.id, """  1. Копия удостоверения личности;
2. Медицинская справка по форме №075 с флюорграфией;
3. Копия формы 063 (прививочная карта);
4. Фотокарточки размером 3 * 4 (6 штук);
5. Аттестат с приложением об образовании;
6. Сертификат ЕНТ при наличии (электронная версия);
7. Сертификат о государственном гранте (при наличии);
8. Результаты специального или творческого экзамена
9. Копия приписного свидетельства 1-2 стр. (для юношей)
 10. Чек об оплате за обучение - 10% от общей стоимости
(для студентов платного отделения).""")
            elif call.data == 'high':
                bot.send_message(call.message.chat.id, """1. Копия удостоверения личности;
2. Диплом с приложением об образовании (подлинник);
3. Фотокарточки размером 3 * 4 (6 штук);
4. Медицинская справка по форме №075 с флюрографией;
5. Копия международного сертификата, подтверждающего владение иностранным языком в соответствии с общеевропейскими компетенциями (стандартами) владения иностранным языком (при наличии);
6. Список научных и научно-методических работ (при наличии);
7. Документ, подтверждающий трудоустройство (при наличии).
8. Чек об оплате за обучение 10% от общей стоимости""")
    except:
        pass

bot.polling(none_stop=True)
